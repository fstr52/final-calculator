services:

  postgres:
    image: postgres:15-alpine
    container_name: calculator-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: calculator
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    container_name: calculator-orchestrator
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ORCHESTRATOR_PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: calculator
      SIGNING_KEY: your_secret_key
      DEBUG: "true"
      LOGGING_FORMAT: json
    ports:
      - "8080:8080"
    volumes:
      - orchestrator-logs:/app/logs

  agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    restart: unless-stopped
    depends_on:
      - orchestrator
    environment:
      ORCHESTRATOR_HOST: orchestrator
      ORCHESTRATOR_PORT: 8080
      COMPUTING_POWER: 5
      DEBUG: true
      LOGGING_FORMAT: json
    volumes:
      - agent-logs:/app/logs
    deploy:
      replicas: 1

volumes:
  postgres-data:
  orchestrator-logs:
  agent-logs: